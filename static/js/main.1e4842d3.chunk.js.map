{"version":3,"sources":["assets/images/logo.png","components/template/Logo.jsx","components/template/Nav.jsx","components/template/Header.jsx","components/template/Main.jsx","components/home/Home.jsx","components/user/UserCrud.jsx","main/Routes.jsx","components/template/Footer.jsx","serviceWorker.js","index.js","main/App.jsx"],"names":["module","exports","__webpack_require__","p","template_Logo","props","react_default","a","createElement","className","es","to","src","logo","alt","template_Nav","template_Header","concat","icon","title","subtitle","template_Main","Fragment","children","Home","headerProps","baseUrl","initialState","user","name","email","list","UserCrud","state","_this2","this","axios","then","resp","setState","data","_this3","method","id","url","getUpdatedList","filter","u","unshift","event","Object","objectSpread","target","value","_this4","type","onChange","e","updateField","placeholder","onClick","save","clear","_this5","delete","renderRows","renderForm","Component","Routes","react_router_es","exact","path","component","from","template_Footer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+VCMzBC,EAAA,SAAAC,GACX,OAAOC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QACpBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,QACnBH,EAAAC,EAAAC,cAAA,OAAKI,IAAKC,IAAMC,IAAI,YCLjBC,SAAA,SAAAV,GACX,OAAOC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KACLL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eADjB,mBAGAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UACLL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADjB,iCCRGO,eAAA,SAAAX,GACX,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCACrBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAS,SAAAQ,OAAWZ,EAAMa,QAAab,EAAMc,OAEpDb,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBJ,EAAMe,aCJ/BC,EAAA,SAAAhB,GACX,OAAOC,EAAAC,EAAAC,cAACF,EAAAC,EAAMe,SAAP,KACHhB,EAAAC,EAAAC,cAACQ,EAAWX,GACZC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVJ,EAAMkB,aCNRC,EAAA,SAAAnB,GAAK,OAChBC,EAAAC,EAAAC,cAACa,EAAD,CAAMH,KAAK,OAAOC,MAAM,YAASC,SAAS,eACtCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,cACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,wGAC0CH,EAAAC,EAAAC,cAAA,WACtCF,EAAAC,EAAAC,cAAA,yCAAgCF,EAAAC,EAAAC,cAAA,WAAhC,cACeF,EAAAC,EAAAC,cAAA,WADf,YAEaF,EAAAC,EAAAC,cAAA,WAFb,YAGaF,EAAAC,EAAAC,cAAA,WAHb,SAIUF,EAAAC,EAAAC,cAAA,WAJV,gBAKiBF,EAAAC,EAAAC,cAAA,gFCVvBiB,EAAc,CAChBP,KAAM,QACNC,MAAO,cACPC,SAAU,+DAGRM,EAAU,8BACVC,EAAe,CACjBC,KAAM,CAAEC,KAAM,GAAIC,MAAO,IACzBC,KAAM,IAKWC,6MACjBC,qBAAaN,uFAEQ,IAAAO,EAAAC,KACjBC,IAAMV,GAASW,KAAK,SAAAC,GAChBJ,EAAKK,SAAS,CAAER,KAAMO,EAAKE,yCAK/BL,KAAKI,SAAS,CAAEX,KAAMD,EAAaC,sCAGhC,IAAAa,EAAAN,KACGP,EAAOO,KAAKF,MAAML,KAClBc,EAASd,EAAKe,GAAK,MAAQ,OAC3BC,EAAMhB,EAAKe,GAAL,GAAA1B,OAAaS,EAAb,KAAAT,OAAwBW,EAAKe,IAAOjB,EAChDU,IAAMM,GAAQE,EAAKhB,GACdS,KAAK,SAAAC,GACF,IAAMP,EAAOU,EAAKI,eAAeP,EAAKE,MACtCC,EAAKF,SAAS,CAAEX,KAAMD,EAAaC,KAAMG,kDAItCH,GACX,IAAMG,EAAOI,KAAKF,MAAMF,KAAKe,OAAO,SAAAC,GAAC,OAAIA,EAAEJ,KAAOf,EAAKe,KAEvD,OADIf,GAAMG,EAAKiB,QAAQpB,GAChBG,sCAGCkB,GACR,IAAMrB,EAAIsB,OAAAC,EAAA,EAAAD,CAAA,GAAQf,KAAKF,MAAML,MAC7BA,EAAKqB,EAAMG,OAAOvB,MAAQoB,EAAMG,OAAOC,MACvClB,KAAKI,SAAS,CAAEX,8CAGP,IAAA0B,EAAAnB,KACT,OACI7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAO9C,UAAU,eACzBoB,KAAK,OAAOwB,MAAOlB,KAAKF,MAAML,KAAKC,KACnC2B,SAAU,SAAAC,GAAC,OAAIH,EAAKI,YAAYD,IAChCE,YAAY,uBAIxBrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAO+C,KAAK,OAAO9C,UAAU,eACzBoB,KAAK,QAAQwB,MAAOlB,KAAKF,MAAML,KAAKE,MACpC0B,SAAU,SAAAC,GAAC,OAAIH,EAAKI,YAAYD,IAChCE,YAAY,0BAM5BrD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdmD,QAAS,SAAAH,GAAC,OAAIH,EAAKO,KAAKJ,KAD5B,UAKAnD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdmD,QAAS,SAAAH,GAAC,OAAIH,EAAKQ,MAAML,KAD7B,4CAWf7B,GACDO,KAAKI,SAAS,CAAEX,wCAGbA,GAAM,IAAAmC,EAAA5B,KACTC,IAAM4B,OAAN,GAAA/C,OAAgBS,EAAhB,KAAAT,OAA2BW,EAAKe,KAAMN,KAAK,SAAAC,GACvC,IAAMP,EAAOgC,EAAKlB,eAAe,MACjCkB,EAAKxB,SAAS,CAAER,iDAKpB,OACIzB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACK2B,KAAK8B,gDASlB,OACI3D,EAAAC,EAAAC,cAACa,EAASI,EACLU,KAAK+B,qBAlHgBC,aCbvBC,EAAA,SAAA/D,GACX,OACIC,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,KACI/D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhD,IACjClB,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWxC,IAChC1B,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAUI,KAAK,IAAI9D,GAAG,QCPnB+D,SAAA,SAAArE,GACX,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACrBH,EAAAC,EAAAC,cAAA,gCACqBF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BADlC,aAGIH,EAAAC,EAAAC,cAAA,0BAAiBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,KAAjB,KAHJ,UAKIH,EAAAC,EAAAC,cAAA,2BAAkBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,aCEVkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3E,EAAAC,EAAAC,cCKD,SAAAH,GACX,OACIC,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACJ,EAAD,MACAE,EAAAC,EAAAC,cAACO,EAAD,MACAT,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAACkE,EAAD,SDZA,MAASQ,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjD,KAAK,SAAAkD,GACjCA,EAAaC","file":"static/js/main.1e4842d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6777486e.png\";","import './Logo.css'\r\nimport logo from '../../assets/images/logo.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport React from 'react'\r\n\r\nexport default props => {\r\n    return <aside className=\"logo\">\r\n        <Link to=\"/\" className=\"logo\">\r\n            <img src={logo} alt=\"logo\" />\r\n        </Link>\r\n    </aside>\r\n}","import './Nav.css'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default props => {\r\n    return <aside className=\"menu-area\">\r\n        <nav className=\"menu\">\r\n            {/* Refatorar em casa! o link tera de ir pro componente refatorado*/}\r\n            <Link to=\"/\">\r\n                <i className=\"fa fa-home\"></i>&ensp;Início\r\n            </Link>\r\n            <Link to=\"/users\">\r\n                <i className=\"fa fa-users\"></i>&ensp;Usuários\r\n            </Link>\r\n        </nav>\r\n    </aside>\r\n}","import './Header.css'\r\nimport React from 'react'\r\n\r\nexport default props => {\r\n    return <header className=\"header d-none d-sm-flex flex-column\">\r\n        <h1 className=\"mt-3\">\r\n            <i className={`fa fa-${props.icon}`}></i>{props.title}\r\n        </h1>\r\n        <p className=\"lead text-muted\">{props.subtitle}</p>\r\n    </header>\r\n}","import './Main.css'\r\nimport React from 'react'\r\nimport Header from './Header'\r\n\r\nexport default props => {\r\n    return <React.Fragment>\r\n        <Header {...props} />\r\n        <main className=\"content container-fluid\">\r\n            <div className=\"p-3 mt-3\">\r\n                {props.children}\r\n            </div>\r\n        </main>\r\n    </React.Fragment>\r\n}","import React from 'react'\r\nimport Main from '../template/Main'\r\n\r\nexport default props =>\r\n    <Main icon=\"home\" title=\"Início\" subtitle=\"Projeto SPA\">\r\n        <div className=\"display-4\">Bem vindo!</div>\r\n        <hr />\r\n        <p className=\"mb-0\">Sistema de uma SPA(Single Page Application) desenvolvido\r\n         para portfólio com ajuda do curso Cod3r! <br />\r\n            <strong>Tecnologias utilizadas: <br />\r\n                Boostrap 4 <br />\r\n                React.js <br />\r\n                Gh pages <br />\r\n                Axios <br />\r\n                React router <br />\r\n            </strong>\r\n        </p>\r\n    </Main>","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Main from '../template/Main'\r\n\r\nconst headerProps = {\r\n    icon: 'users',\r\n    title: 'Usuários',\r\n    subtitle: 'Cadastro de usuários: Incluir, Listar, Alterar e Excluir'\r\n}\r\n\r\nconst baseUrl = 'http://localhost:3001/users'\r\nconst initialState = {\r\n    user: { name: '', email: '' },\r\n    list: []\r\n}\r\n\r\n// Separar os componentes tarefa\r\n\r\nexport default class UserCrud extends Component {\r\n    state = { ...initialState }\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post'\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method](url, user)\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    getUpdatedList(user) {\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if (user) list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event) {\r\n        const user = { ...this.state.user } // clonando o estado para user, para então modifica-lo e usar setstate\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderForm() {\r\n        return (\r\n            <div className=\"form\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Nome</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name=\"name\" value={this.state.user.name}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite o nome...\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>E-mail</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name=\"email\" value={this.state.user.email}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite o e-mail...\"\r\n                            ></input>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex justify-content-end\">\r\n                        <button className=\"btn btn-primary\"\r\n                            onClick={e => this.save(e)}\r\n                        >\r\n                            Salvar\r\n                        </button>\r\n                        <button className=\"btn btn-secory ml-2\"\r\n                            onClick={e => this.clear(e)}\r\n                        >\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    load(user) {\r\n        this.setState({ user })\r\n    }\r\n\r\n    remove(user) {\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(null)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    renderTable() {\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Nome</th>\r\n                        <th>E-mail</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Main {...headerProps}>\r\n                {this.renderForm()}\r\n            </Main>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router'\r\nimport Home from '../components/home/Home'\r\nimport UserCrud from '../components/user/UserCrud'\r\n\r\nexport default props => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' component={Home}></Route>\r\n            <Route path='/users' component={UserCrud}></Route>\r\n            <Redirect from='*' to='/'></Redirect>\r\n        </Switch>\r\n    )\r\n}","import './Footer.css'\r\nimport React from 'react'\r\n\r\nexport default props => {\r\n    return <footer className=\"footer\">\r\n        <span>\r\n            Desenvolvido com <i className=\"fa fa-heart text-danger\"></i>&ensp;\r\n            por\r\n            <strong>&ensp;Cod<span className=\"text-danger\">3</span>r</strong>\r\n            e&ensp;\r\n            <strong>&ensp;Jean<span className=\"text-danger\">Crus</span></strong>\r\n        </span>\r\n    </footer>\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport './App.css'\r\nimport React from 'react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport Logo from '../components/template/Logo'\r\nimport Nav from '../components/template/Nav'\r\nimport Routes from './Routes'\r\nimport Footer from '../components/template/Footer'\r\n\r\nexport default props => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"app\">\r\n                <Logo />\r\n                <Nav />\r\n                <Routes />\r\n                <Footer />\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n\r\n}"],"sourceRoot":""}